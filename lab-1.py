# -*- coding: utf-8 -*-
"""Lab1_Aanchal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z7GqDo99OK2GCTocL_DiM-60nSagiAs4
"""

import numpy as np

"""2: Create an array of 10 zeros# np.zeros"""

array = np.zeros(10)
print(array)

"""3: Create an array of 10 ones"""

array_of_ones = np.ones(10)
print(array_of_ones)

"""4: Create an array of 10 fives"""

array_of_fives = np.ones(10)*5
print(array_of_fives)

"""5: Create an array of the integers from 10 to 50"""

arr = np.arange(10,51)
arr

"""6: Create an array of all the even integers from 10 to 50"""

arr_of_even_integers = np.arange(10,51,2)
arr_of_even_integers

"""7: Create a 3x3 matrix with values ranging from 0 to 8"""

matrix = np.arange(0,9).reshape(3,3)
matrix

"""8: Create a 3x3 identity matrix"""

matrix = np.identity(3)
matrix

"""9: Use NumPy to generate a random number between 0 and 1"""

from numpy import random 
rand_num = random.rand(1)
print(rand_num)

"""10:Use NumPy to generate an array of 25 random numbers sampled from a standard
normal distribution
"""

import numpy as np
rand_num1 = np.random.normal(0,1,25)
print("25 random numbers from a standard normal distribution:")
rand_num1

"""11: Create an array of 20 linearly spaced points between 0 and 1:"""

rand_num1 = np.linspace(0,1,20)
print("20 linear numbers between 0 and 1:")
rand_num1

"""Perform Numpy Indexing and Selection using the matrix generated using the code
below:
"""

mat = np.arange(1,26).reshape(5,5)
mat

"""12: Write the code snippet such that the output is as follows from the matrix mat
array([[12, 13, 14, 15],
[17, 18, 19, 20],
[22, 23, 24, 25]])
"""

mat[2:,1:]

"""13: Write the code snippet such that the output is as follows from the matrix mat
20
"""

mat[-2,-1]

"""14: Write the code snippet such that the output is as follows from the matrix mat
array([[ 2],
[ 7],
[12]])
"""

mat[0:-2,1]

"""15: Write the code snippet such that the output is as follows from the matrix mat
array([21, 22, 23, 24, 25])
"""

mat[-1:]

"""16:Get the sum of all the values in the mat

17:Get the standard deviation of the values in the mat

18:** Get the sum of all the columns on the mat **
"""

sum_mat=mat.sum()
print("sum of all the values in matrix mat is", sum_mat, "\n")

#std_dev_mat= mat.std()
std_dev_mat= np.std(mat)
print("std_dev of all the values in matrix mat is", std_dev_mat)

"""19:Import pandas and read in the Ecommerce Purchases csv file and set it to a
DataFrame called ecom
"""

import pandas as pd
from google.colab import files
#uploaded = files.upload()



"""20: Print the head of the DataFrame.

21: How many rows and columns are there?
"""

ecom = pd.read_csv("/content/drive/MyDrive/Multimedia Systems/Lab-1/Ecommerce Purchases.csv")
print("The head of the dataframe ---ecom--- is \n ")
ecom.head()

"""22: What is the average Purchase Price?"""

ecom['Purchase Price'].mean()

"""23: What were the highest and lowest purchase prices?"""

max_value= ecom['Purchase Price'].max()
print("max value is",max_value, "\n")

min_value= ecom['Purchase Price'].min()
print("min value is", min_value)

"""24: How many people have English 'en' as their Language of choice on the website?"""

df = ecom[ecom['Language'] == 'en']
print(len(df))

"""25: How many people have the job title of "Lawyer"?"""

df = ecom[ecom['Job'] == 'Lawyer']
print(len(df))

"""26: How many people made the purchase during the AM, and how many people
made the purchase during PM?
"""

df = ecom[ecom['AM or PM'] == 'AM']
print("People made purchases during AM")
print(len(df))

print("People made purchases during PM")
df = ecom[ecom['AM or PM'] == 'PM']
print(len(df))

"""27: What are the 5 most common Job Titles?"""

ecom.groupby(['Job']).size().sort_values(ascending=False).head(5)

"""28: Someone made a purchase that came from Lot: "90 WT" what was the Purchase
Price for this transaction?
"""

print(ecom[ecom['Lot'] == '90 WT']['Purchase Price'].values[0])

"""29: What is the email of the person with the following Credit Card Number:
4926535242672853
"""

print(ecom[ecom['Credit Card'] == 49265352426728535]['Email'])

""" 30: How many people have American Express as their Credit Card Provider *and
made a purchase above $95?
"""

print(ecom[(ecom['CC Provider'] == 'American Express') & (ecom['Purchase Price'] > 95)])

"""31: How many people have a credit card that expires in 2025?"""

count = 0
for i in range(len(ecom)):
    expDate = ecom.loc[i, "CC Exp Date"].split('-')
    if expDate[1] == '25':
      count = count + 1
print(count)

"""32: What are the top 5 most popular email providers/hosts (e.g., gmail.com,
yahoo.com, etc...)?

"""

df = pd.DataFrame(columns=['provider'])
for i in range(len(ecom)):
    email = ecom.loc[i, "Email"].split('@')
    df.loc[i] = [email[1]] 
print(df.groupby(['provider']).size().sort_values(ascending=False).head(5))
